#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log  "pipe:rollback logs/error_log interval=1d baknum=7 maxsize=2G";

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # log_format - 用来定义记录日志的格式（可以定义多种日志格式，取不同名字即可）; main 名字
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
		      '"$upstream_addr" "$upstream_status" "$upstream_response_time" "$request_time"';
    
    # access_log - 用来指定日至文件的路径及使用的何种日志格式记录日志; 使用 log_format main 格式
    access_log  logs/access.log  main;
    #access_log  "pipe:rollback logs/access_log interval=1d baknum=7 maxsize=2G"  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on; # 开启和关闭gzip模式 - gzip on|off;
    #gizp压缩起点，文件大于1k才进行压缩
    gzip_min_length 1k;
    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 6;
    # 进行压缩的文件类型。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript ;
    #nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
    gzip_static on; # gzip_static on|off - Nginx 需要安装--with-http_gzip_static_module
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
    gzip_buffers 2 4k;
    # 设置gzip压缩针对的HTTP协议版本
    gzip_http_version 1.1;

    server {
        listen       80;
        #server_name  localhost;
	    server_name  asdf123.club;
	
	    #rewrite  ^(.*)  https://$server_name$1 permanent;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        #access_log  "pipe:rollback logs/host.access_log interval=1d baknum=7 maxsize=2G"  main;
	
        location /admin/static/ {
            #root   html;
            root   /home/ubuntu/nginx-html/hexo;
            # js\css\png 等缓存 365*24*60*60
            add_header Cache-Control max-age=31536000;
        }	

        location / {
            #root   html;
	        root   /home/ubuntu/nginx-html/hexo;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
	    #root   /home/ubuntu/nginx-html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    server {
        listen       443 ssl http2; # SSL 访问端口号为 443; ssl 启用 SSL 功能; 开启 http2;
        server_name  asdf123.club;

        ssl_certificate      crt/1_asdf123.club_bundle.crt; # 证书文件名称
        ssl_certificate_key  crt/2_asdf123.club.key; # 私钥文件名称

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
	
	location /admin/static/ {
            #root html/admin/static/;
            #root   html;
	    root   /home/ubuntu/nginx-html/hexo;
            # js\css\png 等缓存 365*24*60*60
            add_header Cache-Control max-age=31536000;
        }	

        location / {
            #root   html;
	        root   /home/ubuntu/nginx-html/hexo;
            index  index.html index.htm;
        }
    }
    
    include vhost/*.conf;

}